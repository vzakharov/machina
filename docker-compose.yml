version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    ports:
      - "80:80"
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    networks:
      - unfindables-net

  nextjs:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./nextjs:/app # Mount local code for development
      # Add node_modules volume to prevent conflicts with host node_modules
      - /app/node_modules
      - /app/.next
    environment:
      # Only include variables that need to reference shared values
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${ANON_KEY}
    depends_on:
      - kong
    networks:
      - unfindables-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`unfindables.localhost`)"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"

  django:
    build:
      context: ./django
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./django:/code # Mount local code for development
    depends_on:
      - db
    networks:
      - unfindables-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django.unfindables.localhost`)"
      - "traefik.http.services.django.loadbalancer.server.port=8000"

  # Supabase stack
  studio:
    container_name: supabase-studio
    image: supabase/studio:20250317-6955350
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      # Variables that need to reference shared values
      SUPABASE_SERVICE_KEY: ${SERVICE_ROLE_KEY}
      SUPABASE_ANON_KEY: ${ANON_KEY}
    depends_on:
      - kong
      - meta
    networks:
      - unfindables-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.studio.rule=Host(`studio.unfindables.localhost`)"
      - "traefik.http.services.studio.loadbalancer.server.port=3000"
    healthcheck:
      disable: true

  kong:
    container_name: supabase-kong
    image: kong:2.8.1
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8443:8443"
    volumes:
      - ./volumes/api:/var/lib/kong:Z
    networks:
      - unfindables-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kong.rule=Host(`api.unfindables.localhost`)"
      - "traefik.http.services.kong.loadbalancer.server.port=8000"

  meta:
    container_name: supabase-meta
    image: supabase/postgres-meta:v0.78.0
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - unfindables-net

  db:
    container_name: supabase-db
    image: supabase/postgres:15.8.1.060
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./volumes/db/init.sql:/docker-entrypoint-initdb.d/init.sql:Z
      - ./volumes/db/webhooks.sql:/docker-entrypoint-initdb.d/migrations/98-webhooks.sql:Z
      - ./volumes/db/init_webhooks.sql:/docker-entrypoint-initdb.d/migrations/99-init-webhooks.sql:Z
      - ./volumes/db/data:/var/lib/postgresql/data:Z
    networks:
      - unfindables-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.db.rule=Host(`db.unfindables.localhost`)"
      - "traefik.http.services.db.loadbalancer.server.port=${POSTGRES_PORT}"

volumes:
  supabase_db:

networks:
  unfindables-net:
    driver: bridge